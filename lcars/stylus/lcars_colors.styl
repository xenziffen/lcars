// LCARS Colors
background-color = black
border-color = black

// Colors
colors = {
	gray: #235,
	red: #CC1111,
	white: white,
	black: black,
	pale-canary: #FFFF99,
	golden-tanoi: #FFCC66,
	neon-carrot: #FF9933,
	eggplant: #664466,
  lilac: #cc99cc,
	anakiwa: #99ccff,
	mariner: #3366cc,
	bahama-blue: #006699,
	blue-bell: #9999cc,
	melrose: #9999ff,
	hopbush: #cc6699,
	chestnut-rose: #cc6666,
	orange-peel: #FF9966,
	atomic-tangerine: #ff9900,
	danub: #6688cc,
	indigo: #4455bb,
	lavender-purple: #9977aa,
	cosmic: #774466,
	red-damask: #dd6644,
	medium-carmine: #AA5533,
	bourbon: #bb6622,
	sandy-brown: #ee9955,
  periwinkle: #ccddff,
	dodger-blue: #5599ff,
	dodger-blue-alt: #3366ff,
  blue: #0011ee,
	navy-blue: #000088,
	husk: #bbaa55,
	rust: #bb4411,
	tamarillo: #882211
}

default-color = colors.golden-tanoi
default-color-highlight = colors.hopbush

// It works to specify all tags below, 
// but if we really end up wanting to color an HTML element that is
// not a decendent of a div we will just let it break.
// But that's a lot less likely to break than !important

// [[ All text tags ]]
// blockquote, dd, div, dl, dt, figcaption, figure, hr, li, main, ol, p, pre, ul, h1, h2, h3, h4, h5, h6
		
// Creates dynamic color classes
create-colors(prop, suffix, colors)
	for c, v in colors
		.{prefix}{c}-{suffix}.{prefix}{c}-{suffix} // doubled up for more specificity
			{prop} v // if everything is important, nothing is // {prop} v!important


// LCARS colors (background-color)
create-colors('background-color', 'bg', colors)

// LCARS colors (border-color)
create-colors('border-color', 'border', colors)

// LCARS colors (font color)
create-colors('color', 'color', colors)
